@{
    ViewBag.Title = "Home Page";
}
<div class="row">
    <div class="col-md-12">
        <h3> 1. Create a Topic</h3>
        <form class="form-inline" role="form">
            <div id="createTopicForm">
                <div class="form-group">
                    <label class="sr-only" for="topicName">Topic name</label>
                    <input type="text" class="form-control" id="topicName" placeholder="Enter topic name" required="required">
                </div>
                <button id="createTopicButton" type="button" class="btn btn-default" disabled="disabled">Create</button>
                <label id="createStatus">Creating...</label>
            </div>
        </form>
    </div>
</div>
<hr />
<div class="row">
    <div class="col-md-4">
        <h3>2. Select a Topic</h3>
        <div class="form-group">
            <label>Topic Explorer</label>
            <p id="loading">Loading...</p>
            <div id="topicList" class="list-group"></div>
        </div>
    </div>
    <div class="col-md-4">
        <h3>3. Send a message</h3>
        <form role="form">
            <div class="form-group">
                <label for="messageBody">Message</label>
                <textarea id="messageBody" class="form-control" rows="3"></textarea>
            </div>
            <div class="form-inline">
                <label><input id="urgentCheck" type="checkbox" /> Urgent </label>
            </div>
            <div class="form-inline">
                <label class="right"><input id="followUpCheck" type="checkbox" /> Follow Up</label>
            </div>
            <div class="form-inline">
                <button id="sendMessageButton" type="button" class="btn btn-default" disabled="disabled">Send</button>
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <h3>4. Receive a message</h3>
        <div class="form-group">
            <label for="messageBody">Subscriptions</label>
            <p id="noMessages">There is no topic selected</p>
            <div class="list-group" id="messageSubscriptions">
                @*<a href="#" class="list-group-item"><span class="badge">0</span> AllMessages</a>
                    <a href="#" class="list-group-item"><span class="badge">0</span> Priority</a>
                    <a href="#" class="list-group-item"><span class="badge">0</span> FollowUp</a>*@
            </div>
        </div>
        <div class="form-inline">
            <button id="retrieveMessage" type="submit" class="btn btn-default" disabled="disabled">Receive</button>
        </div>
        <hr />
        <div class="form-group">
            <label for="messageBody">Message Contents</label>
            <div id="messageBody">
            </div>
            <label>
                BrokeredMessage Properties
            </label>
            <div id="brokeredmessageproperties">
                <table></table>
            </div>
            <label>
                Message Properties
            </label>
            <div id="properties">
                <table></table>
            </div>
        </div>
    </div>
</div>
<div class="row" id="log">

</div>

@section scripts{
    <script type="text/javascript">
        var getTopicsUrl = "@Url.Action("Topics")";
        var getSubscriptionsUrl = "@Url.Action("Subscriptions")";
        var getTopicsSubscriptionsUrl = "@Url.Action("TopicsWithSubscriptions")";
        var getFiltersUrl = "@Url.Action("Filters")";
        var getMessageCount = "@Url.Action("GetMessageCount")";
        var getRetrieveUrl = "@Url.Action("RetrieveMessage")"

        var subscriptionList = [];

        function createTopic() {
            var topicName = { topicName: $("#topicName").val() };
            $("#createTopicForm").attr("disabled", "disabled");
            $("#createStatus").show();
            $.post('/Home/CreateTopic', topicName)
                .always(function () {
                    $("#createTopicForm").removeAttr("disabled");
                    $("#createStatus").hide();
                }).success(function (data) {
                    var newTopic = $("<a href='#' class='list-group-item'>").html(data);
                    $("topicList").append(newTopic);
                }).fail(function () {
                });
        }

        function loadTopics() {
            //Fill topic's list with topics and subscriptions
            $.get(getTopicsSubscriptionsUrl)
                .always(function () {
                    $("#loading").hide();
                })
                .done(function (response) {
                    var ul = $("#topicList").empty();
                    $.each(response, function (index, topic) {
                        var topicClick = function () {
                            logMessage("Loading list of Subscriptions");
                            $("#topicList a.active").removeClass("active");
                            $(this).addClass("active");
                            $("#sendMessageButton").removeAttr("disabled");
                            loadSubscriptions(topic.Key);
                        };

                        var topicItem = $("<a href='#' class='list-group-item'>")
                            .on('click', topicClick)
                            .html(topic.Key);

                        ul.append(topicItem);
                    });

                    $(".loading").hide();
                });
        }

        function loadSubscriptions(selectedTopicName) {
            var receiveMsgSubscription = $("#messageSubscriptions");
            receiveMsgSubscription.empty();

            $.get(getSubscriptionsUrl, { topicName: selectedTopicName }).success(function (response) {
                for (var i = 0; i < response.length; i++) {
                    var subscriptionClick = function () {
                        $("#messageSubscriptions a.active").removeClass("active");
                        $(this).addClass("active");
                        $("#retrieveMessage").removeAttr("disabled");
                    };

                    var topicItem = $('<a href="#" class="list-group-item"><span class="badge" data-value="' + response[i].Name + '">' + response[i].MessageCount + '</span>' + response[i].Name + '</a>')
                            .on('click', subscriptionClick);
                    receiveMsgSubscription.append(topicItem);
                }

                $('#noMessages').hide();
            });
        }

        function sendMessage() {
            var message = {
                topicName: $("#topicList a.active").html(),
                messageBody: $("#messageBody").val(),
                isUrgent: $("#urgentCheck").is(":checked"),
                isFollowUp: $("#followUpCheck").is(":checked")
            };

            $.post('/Home/SendMessage/', message, function (data) {
                sendMessageSuccessHandler(message.topicName);
            }).fail(function () {
            });
        }

        function sendMessageSuccessHandler(selectedTopicName) {
            $("#messageBody").val("");
            $('#messageSubscriptions').empty();

            $.get(getSubscriptionsUrl, { topicName: selectedTopicName }).success(function (response) {
                for (var i = 0; i < response.length; i++) {
                    var subscriptionClick = function () {
                        $("#messageSubscriptions a.active").removeClass("active");
                        $(this).addClass("active");
                        $("#retrieveMessage").removeAttr("disabled");
                    };

                    var topicItem = $('<a href="#" class="list-group-item"><span class="badge" value="' + response[i].Name + '">' + response[i].MessageCount + '</span>' + response[i].Name + '</a>').on('click', subscriptionClick);
                    $('#messageSubscriptions').append(topicItem);
                }

                $('#noMessages').hide();
            });
        }

        function retrieveMessage() {
            event.preventDefault();
            var url = getRetrieveUrl;
            var topicName = $("#topicList a.active").html();
            var subscriptionName = $("#messageSubscriptions a.active span").data("value");
            $(".loading").show();

            $.get(url, { topicName: topicName, subscriptionName: subscriptionName })
                .success(function (response) {
                    renderMessage(response);
                    loadTopics();
                })
                .error(function () {
                    renderMessage(false);
                });
        }

        function handleEvents() {
            $("#createStatus").hide();
            $("#createTopicButton").click(createTopic);
            $("#topicName").keyup(function () {
                if ($("#topicName").val().length == 0) {
                    $("#createTopicButton").attr("disabled", "disabled");
                } else {
                    $("#createTopicButton").removeAttr("disabled");
                }
            });
            $("#sendMessageButton").click(sendMessage);
            $("#retrieveMessage").click(retrieveMessage);
        }

        $(document).ready(function () {
            $(".loading").show();
            handleEvents();
            loadTopics();
            /*
            $("#sendMessage").submit(function (event) {
                event.preventDefault();

                var url = $(this).attr('action');
                var topicName = $("#sendMessageTopic option:selected").val();
                var message = $("#messageToSend").val();
                var isUrgent = $("#isUrgent").is(':checked');
                var isImportant = $("#isImportant").is(':checked');
                enableLinks(false);
                $(".loading").show();
                $.post(url, { message: message, topicName: topicName, messageIsUrgent: isUrgent, messageIsImportant: isImportant })
                    .success(function (response) {
                        logSuccess("Topics retrieved");
                        renderSendMessageStatus(response);
                        loadTopics();
                    })
                    .error(function (a, b, c) {
                        renderSendMessageStatus(false);
                        logError("Error retrieving topics");
                    });
            });

            $("#retrieveMessage").submit(function (event) {
                $("#noMessage").hide();
                $("#message").hide();
                event.preventDefault();
                var url = $(this).attr('action');
                var topicName = $("#retrieveMessageTopic option:selected").val();
                var subscriptionName = $("#retrieveMessageSubscription option:selected").val();
                $(".loading").show();
                enableLinks(false);
                $.get(url, { topicName: topicName, subscriptionName: subscriptionName })
                    .success(function (response) {
                        logSuccess("Messages retrieved");
                        renderMessage(response);
                        loadTopics();
                    })
                    .error(function () {
                        renderMessage(false);
                        logError("Error retrieving messages");
                    });
            });
            */
        });

        function renderMessage(response) {
            if (response) {
                $("#messageBody").html("<p>" + response.Message + "</p>")
                var properties = $("#properties table");

                properties.children().remove();

                for (var i = 0; i < response.Properties.length; i++) {
                    var item = response.Properties[i];
                    var trClass = (i % 2 == 0) ? '' : 'class="odd"';
                    properties.append('<tr ' + trClass + '><td>' + item.Key + '</td><td>' + item.Value + '</td></tr>');
                }

                var brokeredmsgproperties = $("#brokeredmessageproperties table");

                brokeredmsgproperties.children().remove();

                for (var i = 0; i < response.BrokeredMsgProperties.length; i++) {
                    var item = response.BrokeredMsgProperties[i];
                    var trClass = (i % 2 == 0) ? '' : 'class="odd"';
                    brokeredmsgproperties.append('<tr ' + trClass + '><td>' + item.Key + '</td><td>' + item.Value + '</td></tr>');
                }

                $("#message").show();
            } else {
                $("#noMessage").show();
            }

            enableLinks(true);
            $(".loading").hide();
        }

        function getMessage(numberOfMessages) {
            var message = numberOfMessages + " Messages";
            if (numberOfMessages == "0") message = "No Messages";
            if (numberOfMessages == "1") message = numberOfMessages + " Message";
            return message;
        }

        function viewSubscriptionFilters(topicName, subscriptionName) {
            $(".loading").show();
            $.get(getFiltersUrl, { topicName: topicName, subscriptionName: subscriptionName })
            .success(function (response) {
                var ul = $(".viewSubscriptionFilters > ul");
                ul.children().remove();
                for (var i = 0; i < response.length; i++) {
                    var item = response[i];
                    ul.append('<li>Filter Expression: "' + item.Filter + '"</li>');
                    if (item.FilterAction) ul.append('<li>Filter Action: "' + item.Action + '"</li>');
                }

                $(".viewSubscriptionFilters").dialog('open');
                $(".loading").hide();
            });
        }

        function doSubmit(frm) {
            $("#" + frm).submit();
        }

        function enableLinks(enable) {
            if (enable) {
                $("#sendMessageButton").removeAttr("disabled");
                $("#recieveMessageButton").removeAttr("disabled");
                $("#createTopic").removeAttr("disabled");
            }
            else {
                $("#sendMessageButton").attr("disabled", "disabled");
                $("#recieveMessageButton").attr("disabled", "disabled");
                $("#createTopic").attr("disabled", "disabled");
            }
        }

        /*HELPER FUNCTIONS*/
        function logError(message) {
            logMessage(message, 'error');
        }

        function logSuccess(message) {
            logMessage(message, 'success');
        }

        function logWarning(message) {
            logMessage(message, 'warning');
        }

        function logMessage(message, type) {
            if (!message) {
                return;
            }

            var classes = {
                'success': 'alert alert-success',
                'warning': 'alert alert-warning',
                'error': 'alert alert-danger'
            }

            var alert = document.createElement('div');
            alert.innerHTML = '<a class="close" data-dismiss="alert" href="#" aria-hidden="true">&times;</a>' + message;
            alert.setAttribute('class', classes[type]);

            $("#log").append(alert);
            setTimeout(function () {
                $(alert).alert('close');
            }, 3000);

        }
    </script>
}
